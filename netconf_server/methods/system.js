/* autogenerated by testconf */

/* 2014/22/09 11:02 */

/*
 * Copyright (C) 2014 Cisco Systems, Inc.
 *
 * Author: Petar Koretic <petar.koretic@sartura.hr>
 * Author: Luka Perkov <luka.perkov@sartura.hr>
 *
 * testconf is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * You should have received a copy of the GNU General Public License
 * along with testconf. If not, see <http://www.gnu.org/licenses/>.
 */

var exec = require('child_process').exec;

var netconf = require('./../../core/netconf')

var json_path = require('JSONPath')

var methods = netconf.create_default_methods()

module.exports = methods

methods["namespace"] = { "xmlns" : "urn:ietf:params:xml:ns:yang:ietf-system" }

/* get
	method return structure:
	return object for data
		return { }
	return string if error
		return "error message"
*/

netconf.add_method(methods["get"], "$..system[*]", function(filter)
{
	console.log("$..system")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get"], "$..system-state[*]", function(filter)
{
	console.log("$..system-state")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get"], "$..nacm[*]", function(filter)
{
	console.log("$..nacm")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get"], "$..groups[*]", function(filter)
{
	console.log("$..groups")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get"], "$..clock[*]", function(filter)
{
	console.log("$..clock")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get"], "$..ntp[*]", function(filter)
{
	console.log("$..ntp")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get"], "$..dns-resolver[*]", function(filter)
{
	console.log("$..dns-resolver")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get"], "$..radius[*]", function(filter)
{
	console.log("$..radius")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get"], "$..authentication[*]", function(filter)
{
	console.log("$..authentication")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get"], "$..udp[*]", function(filter)
{
	console.log("$..udp")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get"], "$..options[*]", function(filter)
{
	console.log("$..options")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get"], "$..udp-and-tcp[*]", function(filter)
{
	console.log("$..udp-and-tcp")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get"], "$..options[*]", function(filter)
{
	console.log("$..options")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get"], "$..udp[*]", function(filter)
{
	console.log("$..udp")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get"], "$..platform[*]", function(filter)
{
	console.log("$..platform")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get"], "$..clock[*]", function(filter)
{
	console.log("$..clock")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get"], "$..nacm[*]", function(filter)
{
	console.log("$..nacm")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get"], "$..groups[*]", function(filter)
{
	console.log("$..groups")
	console.log(filter)

	return { }
})

/* get-config
	return object for data
		return { }
	return string if error
		return "error message"
*/

netconf.add_method(methods["get-config"], "$..system[*]", function(filter)
{
	console.log("$..system")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get-config"], "$..system-state[*]", function(filter)
{
	console.log("$..system-state")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get-config"], "$..nacm[*]", function(filter)
{
	console.log("$..nacm")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get-config"], "$..groups[*]", function(filter)
{
	console.log("$..groups")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get-config"], "$..clock[*]", function(filter)
{
	console.log("$..clock")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get-config"], "$..ntp[*]", function(filter)
{
	console.log("$..ntp")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get-config"], "$..dns-resolver[*]", function(filter)
{
	console.log("$..dns-resolver")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get-config"], "$..radius[*]", function(filter)
{
	console.log("$..radius")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get-config"], "$..authentication[*]", function(filter)
{
	console.log("$..authentication")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get-config"], "$..udp[*]", function(filter)
{
	console.log("$..udp")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get-config"], "$..options[*]", function(filter)
{
	console.log("$..options")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get-config"], "$..udp-and-tcp[*]", function(filter)
{
	console.log("$..udp-and-tcp")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get-config"], "$..options[*]", function(filter)
{
	console.log("$..options")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get-config"], "$..udp[*]", function(filter)
{
	console.log("$..udp")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get-config"], "$..platform[*]", function(filter)
{
	console.log("$..platform")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get-config"], "$..clock[*]", function(filter)
{
	console.log("$..clock")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get-config"], "$..nacm[*]", function(filter)
{
	console.log("$..nacm")
	console.log(filter)

	return { }
})

netconf.add_method(methods["get-config"], "$..groups[*]", function(filter)
{
	console.log("$..groups")
	console.log(filter)

	return { }
})

/* edit-config
	method return structure:
	return { code : int, msg : string}
	code - nonzero for error, msg - error message
	returns ok by default
*/

netconf.add_method(methods["edit-config"], "$..system[*]", function(input)
{
	console.log("$..system")
	console.log(input)

})

netconf.add_method(methods["edit-config"], "$..system-state[*]", function(input)
{
	console.log("$..system-state")
	console.log(input)

})

netconf.add_method(methods["edit-config"], "$..nacm[*]", function(input)
{
	console.log("$..nacm")
	console.log(input)

})

netconf.add_method(methods["edit-config"], "$..groups[*]", function(input)
{
	console.log("$..groups")
	console.log(input)

})

netconf.add_method(methods["edit-config"], "$..clock[*]", function(input)
{
	console.log("$..clock")
	console.log(input)

})

netconf.add_method(methods["edit-config"], "$..ntp[*]", function(input)
{
	console.log("$..ntp")
	console.log(input)

})

netconf.add_method(methods["edit-config"], "$..dns-resolver[*]", function(input)
{
	console.log("$..dns-resolver")
	console.log(input)

})

netconf.add_method(methods["edit-config"], "$..radius[*]", function(input)
{
	console.log("$..radius")
	console.log(input)

})

netconf.add_method(methods["edit-config"], "$..authentication[*]", function(input)
{
	console.log("$..authentication")
	console.log(input)

})

netconf.add_method(methods["edit-config"], "$..udp[*]", function(input)
{
	console.log("$..udp")
	console.log(input)

})

netconf.add_method(methods["edit-config"], "$..options[*]", function(input)
{
	console.log("$..options")
	console.log(input)

})

netconf.add_method(methods["edit-config"], "$..udp-and-tcp[*]", function(input)
{
	console.log("$..udp-and-tcp")
	console.log(input)

})

netconf.add_method(methods["edit-config"], "$..options[*]", function(input)
{
	console.log("$..options")
	console.log(input)

})

netconf.add_method(methods["edit-config"], "$..udp[*]", function(input)
{
	console.log("$..udp")
	console.log(input)

})

netconf.add_method(methods["edit-config"], "$..platform[*]", function(input)
{
	console.log("$..platform")
	console.log(input)

})

netconf.add_method(methods["edit-config"], "$..clock[*]", function(input)
{
	console.log("$..clock")
	console.log(input)

})

netconf.add_method(methods["edit-config"], "$..nacm[*]", function(input)
{
	console.log("$..nacm")
	console.log(input)

})

netconf.add_method(methods["edit-config"], "$..groups[*]", function(input)
{
	console.log("$..groups")
	console.log(input)

})

/* RPC methods
	return structure output
	{'data' : {}}
	 non mandatory values are commented out
*/
methods["set-current-datetime"] = function(input, response)
{
	console.log(input['current-datetime'][0])

	response({'data' : ''})
}

methods["set-test"] = function(input, response)
{
	if (json_path.eval(input, "$..ola[0]").length)
	{
		console.log(input['current-datetime'][0])

	}

	if (json_path.eval(input, "$..ola[0]..ola3[0]").length)
	{
		console.log(input['current-datetime'][0])
		//input['current-datetime23'][0]

	}

	response({'data' : ''})
}

methods["system-restart"] = function(input, response)
{
	response({'data' : ''})
}

methods["system-shutdown"] = function(input, response)
{
	response({'data' : ''})
}

